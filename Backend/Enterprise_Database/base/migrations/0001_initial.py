# Generated by Django 5.1.4 on 2025-03-11 06:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=128)),
                ('group', models.CharField(blank=True, max_length=128, null=True)),
                ('pan', models.CharField(blank=True, max_length=128, null=True)),
                ('gstin', models.CharField(blank=True, max_length=128, null=True)),
                ('tan', models.CharField(blank=True, max_length=128, null=True)),
                ('ptrc', models.CharField(blank=True, max_length=128, null=True)),
                ('ptec', models.CharField(blank=True, max_length=128, null=True)),
                ('contact_no', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.CharField(blank=True, max_length=128, null=True)),
                ('poc', models.CharField(blank=True, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('status', models.CharField(choices=[('manager', 'Manager'), ('employee', 'Employee')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('type', models.CharField(choices=[('Advance Tax', 'Advance Tax'), ('GSTR1', 'GSTR1'), ('GSTR3B', 'GSTR3B')], max_length=128)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('mode_of_payment', models.CharField(blank=True, max_length=128, null=True)),
                ('status_description', models.TextField(blank=True, null=True)),
                ('project_completed', models.CharField(choices=[('Completed', 'Completed'), ('Not Completed', 'Not Completed')], default='Not Completed', max_length=128)),
                ('Document_endpath', models.CharField(blank=True, max_length=128, null=True)),
                ('Client', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='base.client')),
                ('Department', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='base.department')),
                ('Employee', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='base.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('task_status', models.CharField(choices=[('Advance Tax', [('Data Collection', 'Data Collection'), ('Data Recieved', 'Data Recieved'), ('Data Process / Working', 'Data Process / Working'), ('Approval From Sir', 'Approval From Sir'), ('Approval From Client', 'Approval From Client'), ('Challan Sent', 'Challan Sent'), ('Challan Paid', 'Challan Paid')]), ('GSTR1', [('Follow Up for Data', 'Follow Up for Data'), ('Data Recieved', 'Data Recieved'), ('Processing of Data', 'Processing of Data'), ('Query Sent To Client', 'Query Sent To Client'), ('Query Solve From Client', 'Query Sent From Client'), ('After solving of Query Tax Power Feeding ', 'After solving of Query Tax Power Feeding '), ('Checking Done By Head', 'Checking Done By Head'), ('Uploading', 'Uploading')]), ('GSTR3B', [('Download and Sent 2B Report', 'Download and Sent 2B Report'), ('Follow Up For Data', 'Follow Up For Data'), ('Data Recieved and Processing of Data', 'Data Recieved and Processing of Data'), ('Query Sent To Client & Query Solve From Client', 'Query Sent To Client & Query Solve From Client'), ('After Solving of Query Tax Power Feeding', 'After Solving of Query Tax Power Feeding'), ('Checking Done By Head', 'Checking Done By Head'), ('Challan Sent to Client & Follow Up for Payment', 'Challan Sent to Client & Follow Up for Payment'), ('Checking For Payment Status Whether Paid Or Not', 'Checking For Payment Status Whether Paid Or Not'), ('After Making Of Payment Submit the Return', 'After Making Of Payment Submit the Return'), ('Uploading', 'Uploading')])], max_length=126)),
                ('task_date', models.DateField()),
                ('Project', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='base.project')),
            ],
        ),
    ]
